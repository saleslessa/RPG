@model DaemonCharacter.Models.NonPlayerModel

@{
    ViewBag.Title = "CreateNPC";
}

<h2 class="animated wow fadeInUp" data-wow-delay="0.2s">
    <i class="fa fa-logoCreateCharacter animated wow fadeInDown"></i>
    &nbsp;Create NPC Form
</h2>

<head>
    <title>Creating a new NPC</title>
</head>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "formCreateNonPlayer" })) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <div class="editor-label">
            @Html.LabelFor(model => model.name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.name)
            @Html.ValidationMessageFor(model => model.name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.race)
        </div>
        <div class="editor-field">
            @Html.DropDownList("races", (SelectList)ViewBag.Races)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.gender)
        </div>
        <div class="editor-field">
            @Html.DropDownList("genders", (SelectList)ViewBag.Genders)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.type)
        </div>
        <div class="editor-field">
            @Html.DropDownList("types", (SelectList)ViewBag.Types)
        </div>


        <div class="editor-label">
            @Html.LabelFor(model => model.chalengeLevel)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.chalengeLevel)
            @Html.ValidationMessageFor(model => model.chalengeLevel)
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.maxLife)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.maxLife)
            @Html.ValidationMessageFor(model => model.maxLife)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.publicAnnotations)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.publicAnnotations)
            @Html.ValidationMessageFor(model => model.publicAnnotations)
        </div>
    </fieldset>
}
<aside>
    <label>Available Attributes</label>
    @{Html.RenderAction("ListNonCharacter", "CharacterAttribute", new { model = "NonPlayerModel" });}
</aside>
<p id="messages">
</p>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script type="text/javascript" src="@Url.Content("~/Scripts/CharacterForms.js")"></script>