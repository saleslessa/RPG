@model DaemonCharacter.Models.CharacterClass

@{
    ViewBag.Title = "New Character";
}

<head>
    <title>Creating a new character</title>
    <script type="text/javascript" src="@Url.Content("~/Scripts/DynamicForm.js")"></script>
    <link href="@Url.Content("~/Content/DynamicForm.css")"
          rel="stylesheet" type="text/css" />
</head>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset id="fieldset-left-dynamic">
        <legend>Create Character Form</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.name)
            @Html.ValidationMessageFor(model => model.name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.level)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.level)
            @Html.ValidationMessageFor(model => model.level)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.maxLife)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.maxLife)
            @Html.ValidationMessageFor(model => model.maxLife)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.gender)
        </div>
        <div class="editor-field">
            @Html.DropDownList("Genders", (SelectList)ViewBag.Genders)
            @Html.ValidationMessageFor(model => model.gender)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.age)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.age)
            @Html.ValidationMessageFor(model => model.age)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.experience)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.experience)
            @Html.ValidationMessageFor(model => model.experience)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.pointsToDistribute)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.pointsToDistribute)
            @Html.ValidationMessageFor(model => model.pointsToDistribute)
        </div>

        <div style="display:@ViewBag.display">
            <div class="editor-label">
                @Html.LabelFor(model => model.remainingPoints)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.remainingPoints)
                @Html.ValidationMessageFor(model => model.remainingPoints)
            </div>
        </div>
        <p>
            <input type="submit" value="Choose Attributes" class="button" />
            @Html.ActionLink("Back to List", "Index")
        </p>
        <p class="messages">
            @ViewBag.Message
        </p>
    </fieldset>

}
<aside id="dynamic-side-right" style="display:@ViewBag.display">
    <label>Available Attributes</label>
    @{Html.RenderAction("ListNonCharacter", "CharacterAttribute");}
</aside>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
