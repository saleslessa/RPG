@model IEnumerable<DaemonCharacter.Application.ViewModels.Attribute.SelectedCharacterAttributeViewModel>

@if (Model.ToList().Count > 0)
{
    <table class="table table-bordered table-responsive" id="TableAttribute_@{@ViewBag.id;}">
        <thead>
            <tr>
                <th class="small">
                    <i class="fa fa-cog"></i>
                </th>
                <th class="small text-center">Value</th>
                <th class="small text-center">Bonus</th>
                <th class="small text-center">Total</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.OrderBy(o => o.AttributeName).ToList())
            {
                <tr id="@Html.Raw(item.AttributeId)">
                    <td class="small">@Html.DisplayFor(m => item.AttributeName)</td>
                    <td class="small td-editable">
                        <input type="number" value="@Html.Raw(item.Value)" class="form-control textbox-table attribute-editable" />
                    </td>
                    <td class="small td-bonus">
                        <input type="number" id="txt_@Html.Raw(item.AttributeName).ToString().Replace(" ","-")" value="@Html.Raw(item.BonusValue)" class="form-control textbox-table attribute-bonus" readonly="readonly" />
                        <div id="tooltip_@Html.Raw(item.AttributeName).ToString().Replace(" ","-")" class="mdl-tooltip" data-mdl-for="txt_@Html.Raw(item.AttributeName).ToString().Replace(" ","-")">
                        </div>
                    </td>
                    <td class="small td-total"><input type="number" value="@Html.Raw(item.TotalValue)" class="form-control textbox-table attribute-total" readonly="readonly" /></td>
                </tr>
            }
        </tbody>
    </table>
    }
