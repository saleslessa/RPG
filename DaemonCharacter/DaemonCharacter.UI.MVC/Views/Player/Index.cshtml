@model IEnumerable<DaemonCharacter.Application.ViewModels.Player.PlayerViewModel>

@{
    ViewBag.Title = "List of Players";
}
@section CustomStyle {
    @Styles.Render("~/bundles/Sprite/Acoes")
    
}

<section id="slider" class="fullheight page-player">
    <h3 class="animated wow fadeInUp" data-wow-delay="0.2s">
        <i class="sprite sprite-List-Item animated wow fadeInDown div-icon"></i>
        &nbsp;List of Players
    </h3>

    <p>
        <a href="~/Player/Create" title="Create new">
            <span class="sprite sprite-New-Item animated wow fadeInDown div-icon"></span>
            &nbsp;<span>Create New</span>
        </a>

    </p>
    <hr />
    <div class="col-md-10">
        <table class="table table-bordered" id="TabIndex">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.CharacterName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.CharacterRace)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.CharacterGender)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.PlayerLevel)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.PlayerAge)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.PlayerMoney)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
            {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.CharacterName)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.CharacterRace)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CharacterGender)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PlayerLevel)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PlayerAge)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PlayerMoney)
                        </td>
                        <td>
                            <a class="sprite sprite-Edit-Item div-icon" href="~/Player/Edit/@item.CharacterId" title="Edit"></a>&nbsp;|&nbsp;
                            <a class="sprite sprite-Add-User div-icon" href="~/Player/Details/@item.CharacterId" title="See Player Sheet"></a>&nbsp;|&nbsp;
                            <a class="sprite sprite-Delete-Item div-icon" href="~/Player/Delete/@item.CharacterId" title="Remove"></a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</section>
@section scripts {
    @Scripts.Render("~/bundles/dataTables")
    <script type="text/javascript">

        function InitTable() {

            var table = jQuery('#TabIndex');

            /* Fixed header extension: http://datatables.net/extensions/scroller/ */

            var oTable = table.dataTable({
                "dom": "<'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r>t<'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>", // datatable layout without  horizobtal scroll
                "scrollY": "300",
                "deferRender": true,
                "order": [
                    [0, 'asc']
                ],
                "lengthMenu": [
                    [5, 15, 20, -1],
                    [5, 15, 20, "All"] // change per page values here
                ],
                "pageLength": 10 // set the initial value
            });


            var tableWrapper = jQuery('#TabIndex'); // datatable creates the table wrapper by adding with id {your_table_jd}_wrapper
            tableWrapper.find('.dataTables_length select').select2(); // initialize select2 dropdown
        }


        // Table Init
        InitTable();

    </script>
}