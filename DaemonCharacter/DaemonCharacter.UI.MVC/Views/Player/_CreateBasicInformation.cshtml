@model DaemonCharacter.Application.ViewModels.Player.PlayerViewModel

<div class="col-xs-6">
    <div class="control-group">
        @Html.LabelFor(model => model.Campaigns, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="controls">
            @Html.DropDownList("SelectedCampaign", new SelectList(Model.Campaigns, "CampaignId", "CampaignName"), htmlAttributes: new { @class = "form-control" })
        </div>
    </div>

    <div class="control-group">
        @Html.LabelFor(model => model.CharacterName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="controls">
            @Html.EditorFor(model => model.CharacterName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CharacterName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="control-group">
        @Html.LabelFor(model => model.CharacterMaxLife, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="controls">
            @Html.EditorFor(model => model.CharacterMaxLife, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CharacterMaxLife, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="control-group">
        @Html.LabelFor(model => model.PlayerAge, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="controls">
            @Html.EditorFor(model => model.PlayerAge, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PlayerAge, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="control-group">
        @Html.LabelFor(model => model.PlayerExperience, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="controls">
            @Html.EditorFor(model => model.PlayerExperience, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PlayerExperience, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="control-group">
        @Html.LabelFor(model => model.PlayerLevel, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="controls">
            @Html.EditorFor(model => model.PlayerLevel, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PlayerLevel, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="control-group">
        @Html.LabelFor(model => model.PlayerMoney, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="controls">
            @Html.EditorFor(model => model.PlayerMoney, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PlayerMoney, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="control-group">
        @Html.LabelFor(model => model.PlayerPointsToDistribute, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="controls">
            @Html.EditorFor(model => model.PlayerPointsToDistribute, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PlayerPointsToDistribute, "", new { @class = "text-danger" })
        </div>
    </div>


</div>
<div class="col-xs-6">
    <div class="control-group">
        @Html.LabelFor(model => model.CharacterRace, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="controls">
            @Html.EnumDropDownListFor(model => model.CharacterRace, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CharacterRace, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="control-group">
        @Html.LabelFor(model => model.CharacterGender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="controls">
            @Html.EnumDropDownListFor(model => model.CharacterGender, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CharacterGender, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="control-group">
        @Html.LabelFor(model => model.PlayerBackground, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="btn-toolbar" data-role="editor-toolbar" data-target="#editor">
            @Html.EditorFor(model => model.PlayerBackground, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PlayerBackground, "", new { @class = "text-danger" })

            @*@Html.Partial("_editor")*@

        </div>
    </div>
</div>
