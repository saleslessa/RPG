@model DaemonCharacter.Application.ViewModels.Player.PlayerViewModel

<div class="col-md-8">
    <div class="row">
        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.CharacterImage, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8 thumbnail box-shadow-6">
                <input type="file" id="CharacterImage" style="display:none" />
                <img id="image" class="img-responsive grayscale-hover-color"src="~/Images/Default User.png" alt="" style="border: 0;cursor:pointer; width: 125px; height: 100px;" onclick="document.getElementById('CharacterImage').click();" />
                @*<img class="img-responsive grayscale-hover-color" src="~/Images/Default User.png" alt="" style="max-height: 100px;" />*@
                @*<i class="sprite sprite-Cat animated wow fadeInDown div-icon"></i>*@
            </div>
        </div>
        <div class="form-group col-md-8">
            @Html.LabelFor(model => model.CharacterName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CharacterName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CharacterName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group col-md-8">
            @Html.LabelFor(model => model.Campaigns, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SelectedCampaignId", new SelectList(Model.Campaigns, "CampaignId", "CampaignName"), htmlAttributes: new { @class = "form-control select2" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.CharacterGender, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EnumDropDownListFor(model => model.CharacterGender, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CharacterGender, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group col-md-5">
            @Html.LabelFor(model => model.CharacterRace, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EnumDropDownListFor(model => model.CharacterRace, htmlAttributes: new { @class = "form-control select2" })
                @Html.ValidationMessageFor(model => model.CharacterRace, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group col-md-3">
            @Html.LabelFor(model => model.PlayerAge, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.PlayerAge, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PlayerAge, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="form-group col-md-3">
            @Html.LabelFor(model => model.CharacterMaxLife, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.CharacterMaxLife, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CharacterMaxLife, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group col-md-3">
            @Html.LabelFor(model => model.PlayerLevel, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.PlayerLevel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PlayerLevel, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group col-md-3">
            @Html.LabelFor(model => model.PlayerExperience, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.PlayerExperience, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PlayerExperience, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group col-md-3">
            @Html.LabelFor(model => model.PlayerMoney, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.PlayerMoney, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PlayerMoney, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>

</div>
<div class="col-md-4">
    <div class="fancy-form">
        @Html.TextAreaFor(model => model.PlayerBackground, new { @class = "form-control markdown", @rows = "13", @data_maxlenght = "2000", @data_height = "300", @data_lang = "en", @placeholder = "Background" })
        @Html.ValidationMessageFor(model => model.PlayerBackground, "", new { @class = "text-danger" })
    </div>
</div>
