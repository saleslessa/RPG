@model DaemonCharacter.Application.ViewModels.Item.ItemViewModel

@{
    ViewBag.Title = "Creating new Item";
}

<h2>Creating new Item</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal Playercontainer">
        <hr />
        <div id="MessageSummary">
            @Html.Partial("_MessageSummary")
        </div>
        @Html.HiddenFor(model => model.ItemId)
        <div class="form-group">
            @Html.LabelFor(model => model.ItemName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.ItemName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ItemName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItemEffect, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.ItemEffect, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ItemEffect, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItemPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.ItemPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ItemPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItemCategory, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EnumDropDownListFor(model => model.ItemCategory, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ItemCategory, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UniqueUse, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.CheckBoxFor(model => model.UniqueUse, htmlAttributes: new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @{Html.RenderPartial("_ListAvailableAttributeForBonus", Model.ItemAttribute);}
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.ActionLink("Back to List", "Index") | <input type="button" name="CreateItem" value="Create" class="btn btn-success" />
            </div>
        </div>

    </div>
}

@section Scripts {
    @Scripts.Render("~/Scripts/Item.js")
}




