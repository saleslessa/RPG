@model DaemonCharacter.Application.ViewModels.Attribute.AttributeViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.AttributeId)

        <div class="form-group">
            @Html.LabelFor(model => model.AttributeName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.AttributeName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AttributeName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AttributeDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.AttributeDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AttributeDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AttributeType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EnumDropDownListFor(model => model.AttributeType, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AttributeType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AttributeMinimum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.AttributeMinimum, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AttributeMinimum, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="control-label col-md-2"></div>

            <div class="form-group col-md-4">
                <table class="table table-striped table-bordered">
                    <tr>
                        <th style="display:none;"></th>
                        <th>Bonus to:</th>
                        <th>
                        </th>
                    </tr>

                    @for (int cont = 0; cont < Model.AttributeBonus.Count; cont++)
                {
                        <tr>
                            <td style="display:none;">
                                @Html.HiddenFor(m => Model.AttributeBonus[cont].AttributeId@*, new { @Name = "AttributeBonusViewModel[" + cont.ToString() + "].AttributeId" }*@)
                            </td>
                            <td>
                                @Html.CheckBoxFor(m => Model.AttributeBonus[cont].Selected@*, new { @Name = "AttributeBonusViewModel[" + cont.ToString() + "].Selected" }*@)
                            </td>
                            <td>
                                @Html.TextBoxFor(m => Model.AttributeBonus[cont].AttributeName@*, new { @Name = "AttributeBonusViewModel[" + cont.ToString() + "].AttributeName", @ReadOnly = "readonly" }*@)
                            </td>
                        </tr>
                    }

                </table>

            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.ActionLink("Back to List", "Index") | <input type="submit" value="Save" class="btn btn-success" />
            </div>
        </div>
        <hr />
        <div class="form-control">
            @ViewBag.Message
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
